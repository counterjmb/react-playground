{"version":3,"sources":["nestedrouting/NestedRouting.js","reportWebVitals.js","index.js"],"names":["NestedRouting","to","path","Topics","Home","About","match","useRouteMatch","url","Topic","topicId","useParams","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAUe,SAASA,IACpB,OACI,cAAC,IAAD,UACI,gCACI,+BACI,6BACI,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,UAAT,yBAIR,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACI,cAACC,EAAD,MAEJ,cAAC,IAAD,CAAOD,KAAK,IAAZ,SACI,cAAC,EAAD,cAQxB,SAASE,IACL,OAAO,sCAGX,SAASC,IACL,OAAO,uCAGX,SAASF,IAEL,IAAIG,EAAQC,cAEZ,OACI,gCACI,wCACA,+BACI,6BACI,cAAC,IAAD,CAAMN,GAAE,UAAKK,EAAME,IAAX,eAAR,0BAEJ,6BACI,cAAC,IAAD,CAAMP,GAAE,UAAKK,EAAME,IAAX,kBAAR,iCAYR,eAAC,IAAD,WACI,cAAC,IAAD,CAAON,KAAI,UAAKI,EAAMJ,KAAX,aAAX,SACI,cAACO,EAAD,MAEJ,cAAC,IAAD,CAAOP,KAAMI,EAAMJ,KAAnB,SACI,gEAOpB,SAASO,IAAS,IACTC,EAAYC,cAAZD,QACL,OAAO,sDAAyBA,KCxFpC,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvB,EAAD,MAEFwB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f385313.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function NestedRouting() {\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/topics\">Topics</Link>\r\n                    </li>\r\n                </ul>\r\n\r\n                <Switch>\r\n                    <Route path=\"/about\">\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path=\"/topics\">\r\n                        <Topics/>\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Home/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nfunction Home() {\r\n    return <h2>Home</h2>;\r\n}\r\n\r\nfunction About() {\r\n    return <h2>About</h2>;\r\n}\r\n\r\nfunction Topics()\r\n{\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            <h2>Topics</h2>\r\n            <ul>\r\n                <li>\r\n                    <Link to={`${match.url}/components`}>Components</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/props-v-state`}>\r\n                        Props v. State\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            {/*\r\n                The Topics page has its own <Switch> with more routes\r\n                that build on the /topics URL path. You can think of the\r\n                2nd <Route> here as an \"index\" page for all topics, or\r\n                 the page that is shown when no topic is selected\r\n            */}\r\n            <Switch>\r\n                <Route path={`${match.path}/:topicId`}>\r\n                    <Topic/>\r\n                </Route>\r\n                <Route path={match.path}>\r\n                    <h3>Please select a topic.</h3>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Topic() {\r\n    let {topicId } = useParams();\r\n    return <h3>Requested topic ID: {topicId}</h3>;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NestedRouting from './nestedrouting/NestedRouting';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <NestedRouting />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}